"""
1. Реализовать простое клиент-серверное взаимодействие по протоколу JIM (JSON instant messaging): клиент
отправляет запрос серверу; сервер отвечает соответствующим кодом результата. Клиент и сервер должны быть реализованы
в виде отдельных скриптов, содержащих соответствующие функции. Функции клиента: сформировать presence-сообщение;
отправить сообщение серверу; получить ответ сервера; разобрать сообщение сервера; параметры командной строки скрипта
client.py <addr> [<port>]: addr — ip-адрес сервера; port — tcp-порт на сервере, по умолчанию 7777. Функции сервера:
принимает сообщение клиента; формирует ответ клиенту; отправляет ответ клиенту; имеет параметры командной строки: -p
<port> — TCP-порт для работы (по умолчанию использует 7777); -a <addr> — IP-адрес для прослушивания (по умолчанию
слушает все доступные адреса).
"""
import json
from socket import *

req = {"action": "presence", "type": "status", "user": {"account_name": "C0deMaver1ck", "status": "Yep, I am here!"}}
msg = json.dumps(req)
s = socket(AF_INET, SOCK_STREAM)

try:
    s.connect(('localhost', 7777))
    s.sendall(bytes(msg, encoding='utf-8'))

    data = s.recv(1024).decode('utf-8')
finally:
    s.close()

print('Сообщение сервера: ', json.loads(data))
